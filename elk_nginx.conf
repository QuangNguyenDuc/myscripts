user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	server {
            if ($host = elktest.ga ) {
                  return 301 https://$host$request_uri;
             } # managed by Certbot


             server_name elktest.ga;

             if ($scheme = http) {
                  return 301 https://$server_name$request_uri;
             }   
    
         }
# redirect http to https

#


	server {
		#listen 0.0.0.0:80;
        listen 0.0.0.0:443 ssl;
    # listen 443 ssl default_server;
        server_name elktest.ga;
        
        ssl_certificate /etc/letsencrypt/live/elktest.ga/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/elktest.ga/privkey.pem;
    }
#kibana

	server {
        if ($host = kibana.elktest.ga ) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name kibana.elktest.ga;

        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
    }

#	
	server {
        listen 0.0.0.0:443 ssl;

        ssl_certificate /etc/letsencrypt/live/kibana.elktest.ga/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kibana.elktest.ga/privkey.pem;
        server_name kibana.elktest.ga;
        location / {
            proxy_pass http://localhost:5601;
        }
    }
# es

	server {
        if ($host = es.elktest.ga ) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name es.elktest.ga;

        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
    }

#
	server {
        listen 0.0.0.0:443 ssl;
        server_name es.elktest.ga;
        ssl_certificate /etc/letsencrypt/live/es.elktest.ga/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/es.elktest.ga/privkey.pem;
        
        location / {
            proxy_pass http://localhost:9200;
        }
    }
# logstash
    server {
        if ($host = logstash.elktest.ga ) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name logstash.elktest.ga;

        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
    }


#
    server {
        listen 0.0.0.0:443 ssl;
        server_name logstash.elktest.ga;

        ssl_certificate /etc/letsencrypt/live/logstash.elktest.ga/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/logstash.elktest.ga/privkey.pem;
        location / {
            # allow origin

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }

            #redirect port
            proxy_pass http://localhost:9999;
        }
    }

#
}

#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
